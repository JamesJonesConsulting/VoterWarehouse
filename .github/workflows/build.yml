name: Build VoterWarehouse
on: push
env:
  registry-proxy: nexus.jamesjonesconsulting.com:5444
jobs:
  build-job:
    runs-on: self-hosted
    container:
      image: nexus.jamesjonesconsulting.com:5444/podman/stable:latest
      options: --userns=keep-id --privileged --user root
      credentials:
        username: ${{ secrets.HOME_NEXUS_DOCKER_USER }}
        password: ${{ secrets.HOME_NEXUS_DOCKER_PASSWORD }}

    steps:
      # Sets up RPM build tools and Ruby Gems
      - name: Install RPM dependencies
        run: |
          dnf install -y rpm-build rpm-sign rubygems ruby-devel gcc gcc-c++ make \
            libffi-devel python3 python3-pip python3-virtualenv python3-wheel upx wget curl pinentry

      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.registry-proxy }}
          username: ${{ secrets.HOME_NEXUS_DOCKER_USER }}
          password: ${{ secrets.HOME_NEXUS_DOCKER_PASSWORD }}

      # Sets up Rubygems packaging pinentry-program /usr/bin/pinentry-curses
      - name: Setup FPM with it's dependent package for building a package
        run: |
          gem install ffi
          gem install fpm
          gem install package_cloud
          echo $PC_TOKEN | base64 -d > ~/.packagecloud
        env:
          PC_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
      # Sets up the python virtual environment, pulls the requirements and builds the binary
      - name: Build the Linux binary
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install .
          python build.py
      - name: Generate Versions
        id: package-versions
        run: |
          if [[ "$GITHUB_REF" =~ ^refs/tags.* ]]; then
            echo "standard=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
            echo "rpm=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
            DEB_VER=$(echo "$GITHUB_REF_NAME" | sed 's|_|-|g')
            echo "deb=$DEB_VER" >> $GITHUB_OUTPUT
          else
            VERSION=$(./dist/voterwarehouse -v)
            VERSION+=$(echo "~${GITHUB_REF_NAME}" | sed "s|/${VERSION}||g" | sed 's|/|-|g')
            echo "standard=$VERSION" >> $GITHUB_OUTPUT
            echo "rpm=$VERSION" >> $GITHUB_OUTPUT
            DEB_VER=$(echo "$VERSION" | sed 's|_|-|g')
            echo "deb=$DEB_VER" >> $GITHUB_OUTPUT
          fi
      - name: Build the Windows binary
        uses: "./.github/actions/wine-build"
        with:
          binary-basename: voterwarehouse
          version: ${{ steps.package-versions.outputs.standard }}"
          registry-proxy: ${{ env.registry-proxy }}
          python-version: '3.11.3'
      - name: Build the RPM package
        run: |
          fpm -s dir -t rpm -n voterwarehouse \
            -v ${{ steps.package-versions.outputs.rpm }} \
            --iteration ${GITHUB_RUN_NUMBER} \
            --description "VoterWarehouse: Imports and Extracts Voter and History data" \
            --url "https://github.com/JamesJonesConsulting/VoterWarehouse" \
            --license "LGPL-3.0" --vendor "James Jones" --maintainer "James Jones <jamjon3@gmail.com>" \
            --config-files /etc/VoterWarehouse/config.yml \
            -p ./dist \
            ./dist/voterwarehouse=/usr/bin/voterwarehouse \
            ./config.sample.yml=/etc/VoterWarehouse/config.yml
          PACKAGE_FILE=$(find . -type f -name "voterwarehouse*.rpm")
          rpm --import https://nexus.jamesjonesconsulting.com/repository/gpg/RPM-GPG-KEY-JAMJON3
          echo "${{ secrets.JAMJON3_RPM_SIGN_GPG_KEY }}" | base64 -d > key.gpg
          echo "${{ secrets.JAMJON3_RPM_SIGN_GPG_SECRET_KEY }}" | base64 -d > private.gpg
          export GPG_TTY=$(tty)
          gpg --import key.gpg
          echo '${{ secrets.JAMJON3_RPM_SIGN_PASSPHRASE }}' | gpg --batch --import private.gpg
          rpm --define "_gpg_name James Jones <jamjon3@gmail.com>" \
            --define "_gpg_sign_cmd_extra_args --pinentry-mode loopback --passphrase ${{ secrets.JAMJON3_RPM_SIGN_PASSPHRASE }}" \
            --addsign $PACKAGE_FILE
          curl -u "$YUM_USER:$YUM_PASSWORD" --upload-file $PACKAGE_FILE $NEXUS_YUM_REPO
          # package_cloud push $PACKAGE_CLOUD_REPO $PACKAGE_FILE
        shell: bash
        env:
          PACKAGE_CLOUD_REPO: jamjon3/yum/rpm_any/rpm_any
          YUM_USER: ${{ secrets.HOME_NEXUS_YUM_USER }}
          YUM_PASSWORD: ${{ secrets.HOME_NEXUS_YUM_PASSWORD }}
          NEXUS_YUM_REPO: https://nexus.jamesjonesconsulting.com/repository/yum-hosted/voting/
      - name: Build the DEB package
        run: |
          fpm -s dir -t deb -n voterwarehouse \
            -v ${{ steps.package-versions.outputs.deb }} \
            --iteration ${GITHUB_RUN_NUMBER} \
            --description "VoterWarehouse: Imports and Extracts Voter and History data" \
            --url "https://github.com/jamjon3/VoterWarehouse" \
            --license "LGPL-3.0" --vendor "James Jones" \
            --config-files /etc/VoterWarehouse/config.yml \
            -p ./dist \
            ./dist/voterwarehouse=/usr/bin/voterwarehouse \
            ./config.sample.yml=/etc/VoterWarehouse/config.yml
          echo "${{ secrets.JAMJON3_RPM_SIGN_GPG_KEY }}" | base64 -d > dist/key.gpg
          echo "${{ secrets.JAMJON3_RPM_SIGN_GPG_SECRET_KEY }}" | base64 -d > dist/private.gpg
          podman build --no-cache \
            --build-arg PRIVATE_KEY_PASS=${{ secrets.JAMJON3_RPM_SIGN_PASSPHRASE }} \
            --build-arg REGISTRY_PROXY=${{ env.registry-proxy }} \
            -f Dockerfile.ubuntu \
            -v "$(pwd)/dist:/dist:Z" .
          PACKAGE_FILE=$(find . -type f -name "voterwarehouse*.deb")          
          apt_repos=(
            apt-focal-hosted
          )
          for repo in ${apt_repos[@]}; do
            DATA_BINARY='@'
            DATA_BINARY+="$PACKAGE_FILE"
            echo "$DATA_BINARY"
            echo "${NEXUS_APT_REPOSITORY_ROOT}${repo}/"
            curl -u "${APT_USER}:${APT_PASSWORD}" -H "Content-Type: multipart/form-data" --data-binary "${DATA_BINARY}" "${NEXUS_APT_REPOSITORY_ROOT}${repo}/"
          done
          # package_cloud push $PACKAGE_CLOUD_REPO $PACKAGE_FILE
        shell: bash
        env:
          PACKAGE_CLOUD_REPO: jamjon3/deb/any/any
          APT_USER: ${{ secrets.HOME_NEXUS_APT_USER }}
          APT_PASSWORD: ${{ secrets.HOME_NEXUS_APT_PASSWORD }}
          NEXUS_APT_REPOSITORY_ROOT: https://nexus.jamesjonesconsulting.com/repository/
      - name: Archive tool artifacts
        if: ${{ !startsWith(github.ref,'refs/tags/') }}
        uses: actions/upload-artifact@v3
        with:
          name: "voterwarehouse-${{ steps.package-versions.outputs.standard }}"
          path: |
            dist
      - name: Release tool artifacts
        if: ${{ startsWith(github.ref,'refs/tags/') }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*.*"
          allowUpdates: true
